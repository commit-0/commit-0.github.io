{"created": 1732308261.786485, "duration": 0.5821871757507324, "exitcode": 1, "root": "/testbed", "environment": {}, "summary": {"passed": 153, "failed": 62, "total": 215, "collected": 215}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests", "type": "Package"}]}, {"nodeid": "tests/test_cache.py::CacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_cache.py::CacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_cache.py::CacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_cache.py::CacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_cache.py::CacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_cache.py::CacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_cache.py::CacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_cache.py::CacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_cache.py::CacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_cache.py::CacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_cache.py::CacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_cache.py::CacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_cache.py::CacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_cache.py::CacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_cache.py", "outcome": "passed", "result": [{"nodeid": "tests/test_cache.py::CacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_cached.py::CacheWrapperTest", "outcome": "passed", "result": [{"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_attributes", "type": "TestCaseFunction", "lineno": 111}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_attributes_lock", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 128}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_clear_lock", "type": "TestCaseFunction", "lineno": 136}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_info", "type": "TestCaseFunction", "lineno": 152}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_lock", "type": "TestCaseFunction", "lineno": 84}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 54}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_wrapped", "type": "TestCaseFunction", "lineno": 97}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_zero_size_cache_decorator", "type": "TestCaseFunction", "lineno": 166}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_zero_size_cache_decorator_info", "type": "TestCaseFunction", "lineno": 184}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_zero_size_cache_decorator_lock", "type": "TestCaseFunction", "lineno": 174}]}, {"nodeid": "tests/test_cached.py::DictWrapperTest", "outcome": "passed", "result": [{"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_attributes", "type": "TestCaseFunction", "lineno": 111}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_attributes_lock", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 128}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_clear_lock", "type": "TestCaseFunction", "lineno": 136}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_info", "type": "TestCaseFunction", "lineno": 197}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_lock", "type": "TestCaseFunction", "lineno": 84}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 54}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_wrapped", "type": "TestCaseFunction", "lineno": 97}]}, {"nodeid": "tests/test_cached.py::NoneWrapperTest", "outcome": "passed", "result": [{"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator", "type": "TestCaseFunction", "lineno": 216}, {"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator_attributes", "type": "TestCaseFunction", "lineno": 223}, {"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 230}, {"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator_info", "type": "TestCaseFunction", "lineno": 235}]}, {"nodeid": "tests/test_cached.py", "outcome": "passed", "result": [{"nodeid": "tests/test_cached.py::CacheWrapperTest", "type": "UnitTestCase"}, {"nodeid": "tests/test_cached.py::DictWrapperTest", "type": "UnitTestCase"}, {"nodeid": "tests/test_cached.py::NoneWrapperTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest", "outcome": "passed", "result": [{"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_attributes", "type": "TestCaseFunction", "lineno": 199}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_attributes_lock", "type": "TestCaseFunction", "lineno": 207}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_clear", "type": "TestCaseFunction", "lineno": 215}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_clear_locked", "type": "TestCaseFunction", "lineno": 224}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_dict", "type": "TestCaseFunction", "lineno": 57}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_locked_dict", "type": "TestCaseFunction", "lineno": 151}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_locked_nocache", "type": "TestCaseFunction", "lineno": 160}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_locked_nospace", "type": "TestCaseFunction", "lineno": 169}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_lru", "type": "TestCaseFunction", "lineno": 80}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_nocache", "type": "TestCaseFunction", "lineno": 112}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_nospace", "type": "TestCaseFunction", "lineno": 103}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_typedmethod_dict", "type": "TestCaseFunction", "lineno": 69}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_typedmethod_lru", "type": "TestCaseFunction", "lineno": 92}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_unhashable", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_weakref", "type": "TestCaseFunction", "lineno": 121}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_wrapped", "type": "TestCaseFunction", "lineno": 187}]}, {"nodeid": "tests/test_cachedmethod.py", "outcome": "passed", "result": [{"nodeid": "tests/test_cachedmethod.py::CachedMethodTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_fifo.py::LRUCacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_fifo.py::LRUCacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_fifo", "type": "TestCaseFunction", "lineno": 10}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_fifo_getsizeof", "type": "TestCaseFunction", "lineno": 35}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_fifo.py", "outcome": "passed", "result": [{"nodeid": "tests/test_fifo.py::LRUCacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_func.py::FIFODecoratorTest", "outcome": "passed", "result": [{"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator", "type": "TestCaseFunction", "lineno": 9}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 20}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_needs_rlock", "type": "TestCaseFunction", "lineno": 77}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_nocache", "type": "TestCaseFunction", "lineno": 31}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_unbound", "type": "TestCaseFunction", "lineno": 42}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_user_function", "type": "TestCaseFunction", "lineno": 66}]}, {"nodeid": "tests/test_func.py::LFUDecoratorTest", "outcome": "passed", "result": [{"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator", "type": "TestCaseFunction", "lineno": 9}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 20}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_needs_rlock", "type": "TestCaseFunction", "lineno": 77}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_nocache", "type": "TestCaseFunction", "lineno": 31}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_unbound", "type": "TestCaseFunction", "lineno": 42}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_user_function", "type": "TestCaseFunction", "lineno": 66}]}, {"nodeid": "tests/test_func.py::LRUDecoratorTest", "outcome": "passed", "result": [{"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator", "type": "TestCaseFunction", "lineno": 9}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 20}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_needs_rlock", "type": "TestCaseFunction", "lineno": 77}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_nocache", "type": "TestCaseFunction", "lineno": 31}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_unbound", "type": "TestCaseFunction", "lineno": 42}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_user_function", "type": "TestCaseFunction", "lineno": 66}]}, {"nodeid": "tests/test_func.py::MRUDecoratorTest", "outcome": "passed", "result": [{"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator", "type": "TestCaseFunction", "lineno": 9}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 20}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_needs_rlock", "type": "TestCaseFunction", "lineno": 77}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_nocache", "type": "TestCaseFunction", "lineno": 31}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_unbound", "type": "TestCaseFunction", "lineno": 42}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_user_function", "type": "TestCaseFunction", "lineno": 66}]}, {"nodeid": "tests/test_func.py::RRDecoratorTest", "outcome": "passed", "result": [{"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator", "type": "TestCaseFunction", "lineno": 9}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 20}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_needs_rlock", "type": "TestCaseFunction", "lineno": 77}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_nocache", "type": "TestCaseFunction", "lineno": 31}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_unbound", "type": "TestCaseFunction", "lineno": 42}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_user_function", "type": "TestCaseFunction", "lineno": 66}]}, {"nodeid": "tests/test_func.py::TTLDecoratorTest", "outcome": "passed", "result": [{"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator", "type": "TestCaseFunction", "lineno": 9}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_clear", "type": "TestCaseFunction", "lineno": 20}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_needs_rlock", "type": "TestCaseFunction", "lineno": 77}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_nocache", "type": "TestCaseFunction", "lineno": 31}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_typed", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_unbound", "type": "TestCaseFunction", "lineno": 42}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_user_function", "type": "TestCaseFunction", "lineno": 66}]}, {"nodeid": "tests/test_func.py", "outcome": "passed", "result": [{"nodeid": "tests/test_func.py::FIFODecoratorTest", "type": "UnitTestCase"}, {"nodeid": "tests/test_func.py::LFUDecoratorTest", "type": "UnitTestCase"}, {"nodeid": "tests/test_func.py::LRUDecoratorTest", "type": "UnitTestCase"}, {"nodeid": "tests/test_func.py::MRUDecoratorTest", "type": "UnitTestCase"}, {"nodeid": "tests/test_func.py::RRDecoratorTest", "type": "UnitTestCase"}, {"nodeid": "tests/test_func.py::TTLDecoratorTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_keys.py::CacheKeysTest", "outcome": "passed", "result": [{"nodeid": "tests/test_keys.py::CacheKeysTest::test_addkeys", "type": "TestCaseFunction", "lineno": 74}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_hashkey", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_pickle", "type": "TestCaseFunction", "lineno": 80}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_typedkey", "type": "TestCaseFunction", "lineno": 41}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_typedmethodkey", "type": "TestCaseFunction", "lineno": 57}]}, {"nodeid": "tests/test_keys.py", "outcome": "passed", "result": [{"nodeid": "tests/test_keys.py::CacheKeysTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_lfu.py::LFUCacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_lfu.py::LFUCacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_lfu", "type": "TestCaseFunction", "lineno": 10}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_lfu_getsizeof", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_lfu.py", "outcome": "passed", "result": [{"nodeid": "tests/test_lfu.py::LFUCacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_lru.py::LRUCacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_lru.py::LRUCacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_lru", "type": "TestCaseFunction", "lineno": 10}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_lru_getsizeof", "type": "TestCaseFunction", "lineno": 35}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_lru.py", "outcome": "passed", "result": [{"nodeid": "tests/test_lru.py::LRUCacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_mru.py::MRUCacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_mru.py::MRUCacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_evict__with_access", "type": "TestCaseFunction", "lineno": 28}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_evict__with_delete", "type": "TestCaseFunction", "lineno": 44}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_evict__writes_only", "type": "TestCaseFunction", "lineno": 12}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_mru.py", "outcome": "passed", "result": [{"nodeid": "tests/test_mru.py::MRUCacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_rr.py::RRCacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_rr.py::RRCacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_rr", "type": "TestCaseFunction", "lineno": 10}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_rr.py", "outcome": "passed", "result": [{"nodeid": "tests/test_rr.py::RRCacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu", "type": "TestCaseFunction", "lineno": 33}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_atomic", "type": "TestCaseFunction", "lineno": 205}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_expire", "type": "TestCaseFunction", "lineno": 140}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_expired", "type": "TestCaseFunction", "lineno": 190}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_lru", "type": "TestCaseFunction", "lineno": 110}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_reverse_insert", "type": "TestCaseFunction", "lineno": 229}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_tuple_key", "type": "TestCaseFunction", "lineno": 219}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_tlru.py", "outcome": "passed", "result": [{"nodeid": "tests/test_tlru.py::TLRUCacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_ttl.py::TTLCacheTest", "outcome": "passed", "result": [{"nodeid": "tests/test_ttl.py::TTLCacheTest::test_defaults", "type": "TestCaseFunction", "lineno": 6}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_delete", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_getsizeof_param", "type": "TestCaseFunction", "lineno": 255}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_getsizeof_subclass", "type": "TestCaseFunction", "lineno": 258}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_insert", "type": "TestCaseFunction", "lineno": 16}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_missing", "type": "TestCaseFunction", "lineno": 119}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_missing_getsizeof", "type": "TestCaseFunction", "lineno": 178}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_pickle", "type": "TestCaseFunction", "lineno": 265}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_pickle_maxsize", "type": "TestCaseFunction", "lineno": 290}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_pop", "type": "TestCaseFunction", "lineno": 76}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_popitem", "type": "TestCaseFunction", "lineno": 96}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_popitem_exception_context", "type": "TestCaseFunction", "lineno": 108}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl", "type": "TestCaseFunction", "lineno": 30}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_atomic", "type": "TestCaseFunction", "lineno": 165}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_datetime", "type": "TestCaseFunction", "lineno": 190}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_expire", "type": "TestCaseFunction", "lineno": 114}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_lru", "type": "TestCaseFunction", "lineno": 86}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_tuple_key", "type": "TestCaseFunction", "lineno": 179}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_update", "type": "TestCaseFunction", "lineno": 34}]}, {"nodeid": "tests/test_ttl.py", "outcome": "passed", "result": [{"nodeid": "tests/test_ttl.py::TTLCacheTest", "type": "UnitTestCase"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/test_cache.py", "type": "Module"}, {"nodeid": "tests/test_cached.py", "type": "Module"}, {"nodeid": "tests/test_cachedmethod.py", "type": "Module"}, {"nodeid": "tests/test_fifo.py", "type": "Module"}, {"nodeid": "tests/test_func.py", "type": "Module"}, {"nodeid": "tests/test_keys.py", "type": "Module"}, {"nodeid": "tests/test_lfu.py", "type": "Module"}, {"nodeid": "tests/test_lru.py", "type": "Module"}, {"nodeid": "tests/test_mru.py", "type": "Module"}, {"nodeid": "tests/test_rr.py", "type": "Module"}, {"nodeid": "tests/test_tlru.py", "type": "Module"}, {"nodeid": "tests/test_ttl.py", "type": "Module"}]}], "tests": [{"nodeid": "tests/test_cache.py::CacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.0005484579999999184, "outcome": "passed"}, "call": {"duration": 0.00025819300000007317, "outcome": "passed"}, "teardown": {"duration": 0.00017026600000003, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.0001674180000001968, "outcome": "passed"}, "call": {"duration": 0.0003276509999996513, "outcome": "passed"}, "teardown": {"duration": 0.00014003699999998176, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.0001698129999998521, "outcome": "passed"}, "call": {"duration": 0.00024135900000032962, "outcome": "passed"}, "teardown": {"duration": 0.00013652800000008014, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00016878600000014288, "outcome": "passed"}, "call": {"duration": 0.00025636099999992723, "outcome": "passed"}, "teardown": {"duration": 0.00013669599999976967, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00015267399999974174, "outcome": "passed"}, "call": {"duration": 0.00017887199999977454, "outcome": "passed"}, "teardown": {"duration": 0.00013853399999996796, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00015003399999979905, "outcome": "passed"}, "call": {"duration": 0.0002518199999999027, "outcome": "passed"}, "teardown": {"duration": 0.00013176200000009075, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00016322899999998697, "outcome": "passed"}, "call": {"duration": 0.00022873599999995164, "outcome": "passed"}, "teardown": {"duration": 0.00014129700000031775, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00017109800000003617, "outcome": "passed"}, "call": {"duration": 0.0002960260000000048, "outcome": "passed"}, "teardown": {"duration": 0.00013611999999962876, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00016992099999990629, "outcome": "passed"}, "call": {"duration": 0.00241605300000014, "outcome": "passed"}, "teardown": {"duration": 0.00014155299999973892, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00016281999999989694, "outcome": "passed"}, "call": {"duration": 0.0002009069999999724, "outcome": "passed"}, "teardown": {"duration": 0.0001318999999999626, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.000169582000000279, "outcome": "passed"}, "call": {"duration": 0.0001902719999997693, "outcome": "passed"}, "teardown": {"duration": 0.00012848200000004084, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00014696499999988788, "outcome": "passed"}, "call": {"duration": 0.00017371199999960396, "outcome": "passed"}, "teardown": {"duration": 0.00012790200000001306, "outcome": "passed"}}, {"nodeid": "tests/test_cache.py::CacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "CacheTest", "test_cache.py", "tests", "testbed", ""], "setup": {"duration": 0.00014908400000024358, "outcome": "passed"}, "call": {"duration": 0.00018386500000033834, "outcome": "passed"}, "teardown": {"duration": 0.0001993350000000227, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator", "lineno": 28, "outcome": "failed", "keywords": ["test_decorator", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.0002445459999997901, "outcome": "passed"}, "call": {"duration": 0.00032388199999999756, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 675, "message": "AssertionError: None unexpectedly found in Cache({None: 0}, maxsize=2, currsize=1)"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 37, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.CacheWrapperTest testMethod=test_decorator>\n\n    def test_decorator(self):\n        cache = self.cache(2)\n        wrapper = cachetools.cached(cache)(self.func)\n    \n        self.assertEqual(len(cache), 0)\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(len(cache), 1)\n        self.assertIn(cachetools.keys.hashkey(0), cache)\n>       self.assertNotIn(cachetools.keys.hashkey(1), cache)\nE       AssertionError: None unexpectedly found in Cache({None: 0}, maxsize=2, currsize=1)\n\ntests/test_cached.py:37: AssertionError"}, "teardown": {"duration": 0.00026246099999971406, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_attributes", "lineno": 111, "outcome": "passed", "keywords": ["test_decorator_attributes", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00020210099999973252, "outcome": "passed"}, "call": {"duration": 0.000216286000000121, "outcome": "passed"}, "teardown": {"duration": 0.0001446529999999946, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_attributes_lock", "lineno": 119, "outcome": "passed", "keywords": ["test_decorator_attributes_lock", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00016025999999991214, "outcome": "passed"}, "call": {"duration": 0.00018200299999993064, "outcome": "passed"}, "teardown": {"duration": 0.00013271100000000757, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_clear", "lineno": 128, "outcome": "passed", "keywords": ["test_decorator_clear", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00015252099999996105, "outcome": "passed"}, "call": {"duration": 0.000195474999999945, "outcome": "passed"}, "teardown": {"duration": 0.00013262599999963598, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_clear_lock", "lineno": 136, "outcome": "passed", "keywords": ["test_decorator_clear_lock", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.0001498889999997921, "outcome": "passed"}, "call": {"duration": 0.00019145299999978604, "outcome": "passed"}, "teardown": {"duration": 0.00014563400000033866, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_info", "lineno": 152, "outcome": "failed", "keywords": ["test_decorator_info", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.0001547240000001615, "outcome": "passed"}, "call": {"duration": 0.0003074300000003305, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 159, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.CacheWrapperTest testMethod=test_decorator_info>\n\n    def test_decorator_info(self):\n        cache = self.cache(2)\n        wrapper = cachetools.cached(cache, info=True)(self.func)\n        self.assertEqual(wrapper.cache_info(), (0, 0, 2, 0))\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(wrapper.cache_info(), (0, 1, 2, 1))\n>       self.assertEqual(wrapper(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cached.py:159: AssertionError"}, "teardown": {"duration": 0.00019721199999978012, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_lock", "lineno": 84, "outcome": "failed", "keywords": ["test_decorator_lock", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00016771900000023265, "outcome": "passed"}, "call": {"duration": 0.00027742999999968987, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 93, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.CacheWrapperTest testMethod=test_decorator_lock>\n\n    def test_decorator_lock(self):\n        cache = self.cache(2)\n        lock = CountedLock()\n        wrapper = cachetools.cached(cache, lock=lock)(self.func)\n    \n        self.assertEqual(len(cache), 0)\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(lock.count, 2)\n>       self.assertEqual(wrapper(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cached.py:93: AssertionError"}, "teardown": {"duration": 0.00019235699999997635, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_typed", "lineno": 54, "outcome": "failed", "keywords": ["test_decorator_typed", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00017131900000011413, "outcome": "passed"}, "call": {"duration": 0.0002462830000000693, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 675, "message": "AssertionError: None unexpectedly found in Cache({None: 0}, maxsize=3, currsize=1)"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 64, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.CacheWrapperTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n        cache = self.cache(3)\n        key = cachetools.keys.typedkey\n        wrapper = cachetools.cached(cache, key=key)(self.func)\n    \n        self.assertEqual(len(cache), 0)\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(len(cache), 1)\n        self.assertIn(cachetools.keys.typedkey(0), cache)\n>       self.assertNotIn(cachetools.keys.typedkey(1), cache)\nE       AssertionError: None unexpectedly found in Cache({None: 0}, maxsize=3, currsize=1)\n\ntests/test_cached.py:64: AssertionError"}, "teardown": {"duration": 0.00019152100000008332, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_decorator_wrapped", "lineno": 97, "outcome": "passed", "keywords": ["test_decorator_wrapped", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.000173483999999835, "outcome": "passed"}, "call": {"duration": 0.0002218709999999291, "outcome": "passed"}, "teardown": {"duration": 0.0001363030000001153, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_zero_size_cache_decorator", "lineno": 166, "outcome": "passed", "keywords": ["test_zero_size_cache_decorator", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.0001525010000000826, "outcome": "passed"}, "call": {"duration": 0.00017833699999991737, "outcome": "passed"}, "teardown": {"duration": 0.00013974900000013335, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_zero_size_cache_decorator_info", "lineno": 184, "outcome": "passed", "keywords": ["test_zero_size_cache_decorator_info", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00014770499999983144, "outcome": "passed"}, "call": {"duration": 0.00017750100000002433, "outcome": "passed"}, "teardown": {"duration": 0.00012776100000033708, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::CacheWrapperTest::test_zero_size_cache_decorator_lock", "lineno": 174, "outcome": "passed", "keywords": ["test_zero_size_cache_decorator_lock", "CacheWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00015626300000004534, "outcome": "passed"}, "call": {"duration": 0.00017920999999976317, "outcome": "passed"}, "teardown": {"duration": 0.00017301000000014, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator", "lineno": 28, "outcome": "failed", "keywords": ["test_decorator", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00023058799999997603, "outcome": "passed"}, "call": {"duration": 0.0002302520000001529, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 675, "message": "AssertionError: None unexpectedly found in {None: 0}"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 37, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.DictWrapperTest testMethod=test_decorator>\n\n    def test_decorator(self):\n        cache = self.cache(2)\n        wrapper = cachetools.cached(cache)(self.func)\n    \n        self.assertEqual(len(cache), 0)\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(len(cache), 1)\n        self.assertIn(cachetools.keys.hashkey(0), cache)\n>       self.assertNotIn(cachetools.keys.hashkey(1), cache)\nE       AssertionError: None unexpectedly found in {None: 0}\n\ntests/test_cached.py:37: AssertionError"}, "teardown": {"duration": 0.00018244200000028243, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_attributes", "lineno": 111, "outcome": "passed", "keywords": ["test_decorator_attributes", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.0001800320000002742, "outcome": "passed"}, "call": {"duration": 0.00018745899999972337, "outcome": "passed"}, "teardown": {"duration": 0.0001369469999996653, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_attributes_lock", "lineno": 119, "outcome": "passed", "keywords": ["test_decorator_attributes_lock", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.0001537400000000133, "outcome": "passed"}, "call": {"duration": 0.0001713350000001057, "outcome": "passed"}, "teardown": {"duration": 0.00012886900000008694, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_clear", "lineno": 128, "outcome": "passed", "keywords": ["test_decorator_clear", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00014710800000017343, "outcome": "passed"}, "call": {"duration": 0.00016738199999988268, "outcome": "passed"}, "teardown": {"duration": 0.00012850100000028064, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_clear_lock", "lineno": 136, "outcome": "passed", "keywords": ["test_decorator_clear_lock", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00014384700000036332, "outcome": "passed"}, "call": {"duration": 0.00016484299999985907, "outcome": "passed"}, "teardown": {"duration": 0.00012435099999974497, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_info", "lineno": 197, "outcome": "failed", "keywords": ["test_decorator_info", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00014934099999974748, "outcome": "passed"}, "call": {"duration": 0.0002476250000000846, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 204, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.DictWrapperTest testMethod=test_decorator_info>\n\n    def test_decorator_info(self):\n        cache = self.cache(2)\n        wrapper = cachetools.cached(cache, info=True)(self.func)\n        self.assertEqual(wrapper.cache_info(), (0, 0, None, 0))\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(wrapper.cache_info(), (0, 1, None, 1))\n>       self.assertEqual(wrapper(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cached.py:204: AssertionError"}, "teardown": {"duration": 0.00018897400000028597, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_lock", "lineno": 84, "outcome": "failed", "keywords": ["test_decorator_lock", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00017031200000028335, "outcome": "passed"}, "call": {"duration": 0.00022547000000017192, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 93, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.DictWrapperTest testMethod=test_decorator_lock>\n\n    def test_decorator_lock(self):\n        cache = self.cache(2)\n        lock = CountedLock()\n        wrapper = cachetools.cached(cache, lock=lock)(self.func)\n    \n        self.assertEqual(len(cache), 0)\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(lock.count, 2)\n>       self.assertEqual(wrapper(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cached.py:93: AssertionError"}, "teardown": {"duration": 0.00019246000000006092, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_typed", "lineno": 54, "outcome": "failed", "keywords": ["test_decorator_typed", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00016990100000002784, "outcome": "passed"}, "call": {"duration": 0.00023035699999995884, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 675, "message": "AssertionError: None unexpectedly found in {None: 0}"}, "traceback": [{"path": "tests/test_cached.py", "lineno": 64, "message": "AssertionError"}], "longrepr": "self = <tests.test_cached.DictWrapperTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n        cache = self.cache(3)\n        key = cachetools.keys.typedkey\n        wrapper = cachetools.cached(cache, key=key)(self.func)\n    \n        self.assertEqual(len(cache), 0)\n        self.assertEqual(wrapper(0), 0)\n        self.assertEqual(len(cache), 1)\n        self.assertIn(cachetools.keys.typedkey(0), cache)\n>       self.assertNotIn(cachetools.keys.typedkey(1), cache)\nE       AssertionError: None unexpectedly found in {None: 0}\n\ntests/test_cached.py:64: AssertionError"}, "teardown": {"duration": 0.00018367699999988218, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::DictWrapperTest::test_decorator_wrapped", "lineno": 97, "outcome": "passed", "keywords": ["test_decorator_wrapped", "DictWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00016939599999998833, "outcome": "passed"}, "call": {"duration": 0.00020448300000008857, "outcome": "passed"}, "teardown": {"duration": 0.00017442000000000846, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator", "lineno": 216, "outcome": "passed", "keywords": ["test_decorator", "NoneWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00023352099999973674, "outcome": "passed"}, "call": {"duration": 0.00020260699999985476, "outcome": "passed"}, "teardown": {"duration": 0.0001337379999997168, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator_attributes", "lineno": 223, "outcome": "passed", "keywords": ["test_decorator_attributes", "NoneWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00015290300000003754, "outcome": "passed"}, "call": {"duration": 0.0001649569999999656, "outcome": "passed"}, "teardown": {"duration": 0.0001604149999998583, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator_clear", "lineno": 230, "outcome": "passed", "keywords": ["test_decorator_clear", "NoneWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00015033400000019626, "outcome": "passed"}, "call": {"duration": 0.00016055599999997838, "outcome": "passed"}, "teardown": {"duration": 0.0001260060000003449, "outcome": "passed"}}, {"nodeid": "tests/test_cached.py::NoneWrapperTest::test_decorator_info", "lineno": 235, "outcome": "passed", "keywords": ["test_decorator_info", "NoneWrapperTest", "test_cached.py", "tests", "testbed", ""], "setup": {"duration": 0.00014960900000016153, "outcome": "passed"}, "call": {"duration": 0.000250493999999879, "outcome": "passed"}, "teardown": {"duration": 0.00016537100000002525, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_attributes", "lineno": 199, "outcome": "passed", "keywords": ["test_attributes", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.0002443079999996378, "outcome": "passed"}, "call": {"duration": 0.00017301299999994413, "outcome": "passed"}, "teardown": {"duration": 0.00013083699999993925, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_attributes_lock", "lineno": 207, "outcome": "passed", "keywords": ["test_attributes_lock", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00016317399999987714, "outcome": "passed"}, "call": {"duration": 0.00016268200000002508, "outcome": "passed"}, "teardown": {"duration": 0.000128764000000281, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_clear", "lineno": 215, "outcome": "passed", "keywords": ["test_clear", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00014704900000017673, "outcome": "passed"}, "call": {"duration": 0.00017943599999981075, "outcome": "passed"}, "teardown": {"duration": 0.00012923199999992363, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_clear_locked", "lineno": 224, "outcome": "passed", "keywords": ["test_clear_locked", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.0001453520000000985, "outcome": "passed"}, "call": {"duration": 0.00016924099999959807, "outcome": "passed"}, "teardown": {"duration": 0.0001377350000000277, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_dict", "lineno": 57, "outcome": "failed", "keywords": ["test_dict", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00014515300000006448, "outcome": "passed"}, "call": {"duration": 0.00022473399999967114, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cachedmethod.py", "lineno": 62, "message": "AssertionError"}], "longrepr": "self = <tests.test_cachedmethod.CachedMethodTest testMethod=test_dict>\n\n    def test_dict(self):\n        cached = Cached({})\n    \n        self.assertEqual(cached.get(0), 0)\n>       self.assertEqual(cached.get(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cachedmethod.py:62: AssertionError"}, "teardown": {"duration": 0.00018595500000007092, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_locked_dict", "lineno": 151, "outcome": "failed", "keywords": ["test_locked_dict", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00017459000000030755, "outcome": "passed"}, "call": {"duration": 0.0002308610000003597, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 1 != 3"}, "traceback": [{"path": "tests/test_cachedmethod.py", "lineno": 156, "message": "AssertionError"}], "longrepr": "self = <tests.test_cachedmethod.CachedMethodTest testMethod=test_locked_dict>\n\n    def test_locked_dict(self):\n        cached = Locked({})\n    \n        self.assertEqual(cached.get(0), 1)\n>       self.assertEqual(cached.get(1), 3)\nE       AssertionError: 1 != 3\n\ntests/test_cachedmethod.py:156: AssertionError"}, "teardown": {"duration": 0.0001798860000001845, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_locked_nocache", "lineno": 160, "outcome": "passed", "keywords": ["test_locked_nocache", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00016734300000020852, "outcome": "passed"}, "call": {"duration": 0.000187649000000345, "outcome": "passed"}, "teardown": {"duration": 0.00013577600000003187, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_locked_nospace", "lineno": 169, "outcome": "passed", "keywords": ["test_locked_nospace", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.0001533999999998592, "outcome": "passed"}, "call": {"duration": 0.00020262599999965047, "outcome": "passed"}, "teardown": {"duration": 0.00014612500000010797, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_lru", "lineno": 80, "outcome": "failed", "keywords": ["test_lru", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00015258199999967914, "outcome": "passed"}, "call": {"duration": 0.00023518700000035864, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cachedmethod.py", "lineno": 85, "message": "AssertionError"}], "longrepr": "self = <tests.test_cachedmethod.CachedMethodTest testMethod=test_lru>\n\n    def test_lru(self):\n        cached = Cached(LRUCache(maxsize=2))\n    \n        self.assertEqual(cached.get(0), 0)\n>       self.assertEqual(cached.get(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cachedmethod.py:85: AssertionError"}, "teardown": {"duration": 0.00022123600000023558, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_nocache", "lineno": 112, "outcome": "passed", "keywords": ["test_nocache", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00019346900000005718, "outcome": "passed"}, "call": {"duration": 0.00023975499999995264, "outcome": "passed"}, "teardown": {"duration": 0.0001378129999998201, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_nospace", "lineno": 103, "outcome": "passed", "keywords": ["test_nospace", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00015194600000034697, "outcome": "passed"}, "call": {"duration": 0.00024518900000014554, "outcome": "passed"}, "teardown": {"duration": 0.00013297400000000792, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_typedmethod_dict", "lineno": 69, "outcome": "failed", "keywords": ["test_typedmethod_dict", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00014956700000023915, "outcome": "passed"}, "call": {"duration": 0.00026680700000003554, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cachedmethod.py", "lineno": 74, "message": "AssertionError"}], "longrepr": "self = <tests.test_cachedmethod.CachedMethodTest testMethod=test_typedmethod_dict>\n\n    def test_typedmethod_dict(self):\n        cached = Cached(LRUCache(maxsize=2))\n    \n        self.assertEqual(cached.get_typedmethod(0), 0)\n>       self.assertEqual(cached.get_typedmethod(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cachedmethod.py:74: AssertionError"}, "teardown": {"duration": 0.00019074499999982564, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_typedmethod_lru", "lineno": 92, "outcome": "failed", "keywords": ["test_typedmethod_lru", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00020507299999961148, "outcome": "passed"}, "call": {"duration": 0.00023410899999998236, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: 0 != 1"}, "traceback": [{"path": "tests/test_cachedmethod.py", "lineno": 97, "message": "AssertionError"}], "longrepr": "self = <tests.test_cachedmethod.CachedMethodTest testMethod=test_typedmethod_lru>\n\n    def test_typedmethod_lru(self):\n        cached = Cached(LRUCache(maxsize=2))\n    \n        self.assertEqual(cached.get_typedmethod(0), 0)\n>       self.assertEqual(cached.get_typedmethod(1), 1)\nE       AssertionError: 0 != 1\n\ntests/test_cachedmethod.py:97: AssertionError"}, "teardown": {"duration": 0.00017859799999975223, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_unhashable", "lineno": 178, "outcome": "failed", "keywords": ["test_unhashable", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00023382599999965947, "outcome": "passed"}, "call": {"duration": 0.0002481089999997188, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 163, "message": "AssertionError: TypeError not raised"}, "traceback": [{"path": "tests/test_cachedmethod.py", "lineno": 185, "message": "AssertionError"}], "longrepr": "self = <tests.test_cachedmethod.CachedMethodTest testMethod=test_unhashable>\n\n    def test_unhashable(self):\n        cached = Unhashable(LRUCache(maxsize=0))\n    \n        self.assertEqual(cached.get_default(0), 0)\n        self.assertEqual(cached.get_default(1), 1)\n    \n>       with self.assertRaises(TypeError):\nE       AssertionError: TypeError not raised\n\ntests/test_cachedmethod.py:185: AssertionError"}, "teardown": {"duration": 0.0001774060000001576, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_weakref", "lineno": 121, "outcome": "failed", "keywords": ["test_weakref", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00017086400000021484, "outcome": "passed"}, "call": {"duration": 0.010772785999999979, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 838, "message": "AssertionError: Int(2, 1) != 3"}, "traceback": [{"path": "tests/test_cachedmethod.py", "lineno": 145, "message": "AssertionError"}], "longrepr": "self = <tests.test_cachedmethod.CachedMethodTest testMethod=test_weakref>\n\n    def test_weakref(self):\n        import weakref\n        import fractions\n        import gc\n    \n        # in Python 3.7, `int` does not support weak references even\n        # when subclassed, but Fraction apparently does...\n        class Int(fractions.Fraction):\n            def __add__(self, other):\n                return Int(fractions.Fraction.__add__(self, other))\n    \n        cached = Cached(weakref.WeakValueDictionary(), count=Int(0))\n    \n        self.assertEqual(cached.get(0), 0)\n        gc.collect()\n        self.assertEqual(cached.get(0), 1)\n    \n        ref = cached.get(1)\n        self.assertEqual(ref, 2)\n        self.assertEqual(cached.get(1), 2)\n        self.assertEqual(cached.get(1.0), 2)\n    \n        ref = cached.get_typedmethod(1)\n>       self.assertEqual(ref, 3)\nE       AssertionError: Int(2, 1) != 3\n\ntests/test_cachedmethod.py:145: AssertionError"}, "teardown": {"duration": 0.00021957100000014051, "outcome": "passed"}}, {"nodeid": "tests/test_cachedmethod.py::CachedMethodTest::test_wrapped", "lineno": 187, "outcome": "passed", "keywords": ["test_wrapped", "CachedMethodTest", "test_cachedmethod.py", "tests", "testbed", ""], "setup": {"duration": 0.00018550999999966677, "outcome": "passed"}, "call": {"duration": 0.00019644100000038023, "outcome": "passed"}, "teardown": {"duration": 0.0001823560000002722, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00024260699999967272, "outcome": "passed"}, "call": {"duration": 0.0001978959999999752, "outcome": "passed"}, "teardown": {"duration": 0.0001377279999998926, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.0001617220000000863, "outcome": "passed"}, "call": {"duration": 0.00022012099999990653, "outcome": "passed"}, "teardown": {"duration": 0.000131474999999881, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_fifo", "lineno": 10, "outcome": "passed", "keywords": ["test_fifo", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00016294000000005582, "outcome": "passed"}, "call": {"duration": 0.0001984879999996636, "outcome": "passed"}, "teardown": {"duration": 0.0001307960000000996, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_fifo_getsizeof", "lineno": 35, "outcome": "passed", "keywords": ["test_fifo_getsizeof", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00014852199999992877, "outcome": "passed"}, "call": {"duration": 0.00020497299999977514, "outcome": "passed"}, "teardown": {"duration": 0.00012809999999996435, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00014545600000026582, "outcome": "passed"}, "call": {"duration": 0.00021124500000002655, "outcome": "passed"}, "teardown": {"duration": 0.00013182399999989158, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00015501099999992718, "outcome": "passed"}, "call": {"duration": 0.00026876999999991824, "outcome": "passed"}, "teardown": {"duration": 0.00014480699999985802, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00014908799999968636, "outcome": "passed"}, "call": {"duration": 0.0001880970000001092, "outcome": "passed"}, "teardown": {"duration": 0.00012976500000005942, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00014909699999998693, "outcome": "passed"}, "call": {"duration": 0.0002643899999998922, "outcome": "passed"}, "teardown": {"duration": 0.0001299299999999448, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00015637399999990365, "outcome": "passed"}, "call": {"duration": 0.0002464449999997065, "outcome": "passed"}, "teardown": {"duration": 0.00013383100000030623, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00015315800000026414, "outcome": "passed"}, "call": {"duration": 0.00030717899999999076, "outcome": "passed"}, "teardown": {"duration": 0.00013405799999999246, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00014946999999976285, "outcome": "passed"}, "call": {"duration": 0.003539206000000128, "outcome": "passed"}, "teardown": {"duration": 0.0001448299999999847, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00016828799999979438, "outcome": "passed"}, "call": {"duration": 0.0002051990000002668, "outcome": "passed"}, "teardown": {"duration": 0.00013731100000002883, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.0001525600000000793, "outcome": "passed"}, "call": {"duration": 0.00020432599999997691, "outcome": "passed"}, "teardown": {"duration": 0.00013184499999985277, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00015111000000000985, "outcome": "passed"}, "call": {"duration": 0.00016937600000010988, "outcome": "passed"}, "teardown": {"duration": 0.0001911169999999629, "outcome": "passed"}}, {"nodeid": "tests/test_fifo.py::LRUCacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "LRUCacheTest", "test_fifo.py", "tests", "testbed", ""], "setup": {"duration": 0.00015552499999982317, "outcome": "passed"}, "call": {"duration": 0.00018891899999973205, "outcome": "passed"}, "teardown": {"duration": 0.00017527099999981033, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator", "lineno": 9, "outcome": "failed", "keywords": ["test_decorator", "FIFODecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0002319109999997515, "outcome": "passed"}, "call": {"duration": 0.00020020899999995123, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 11, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 11, "message": "TypeError"}], "longrepr": "self = <tests.test_func.FIFODecoratorTest testMethod=test_decorator>\n\n    def test_decorator(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:11: TypeError"}, "teardown": {"duration": 0.0001954419999998791, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_clear", "lineno": 20, "outcome": "failed", "keywords": ["test_decorator_clear", "FIFODecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016985200000041445, "outcome": "passed"}, "call": {"duration": 0.00019626399999994604, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 22, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 22, "message": "TypeError"}], "longrepr": "self = <tests.test_func.FIFODecoratorTest testMethod=test_decorator_clear>\n\n    def test_decorator_clear(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:22: TypeError"}, "teardown": {"duration": 0.0001797749999998821, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_needs_rlock", "lineno": 77, "outcome": "failed", "keywords": ["test_decorator_needs_rlock", "FIFODecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001797110000003599, "outcome": "passed"}, "call": {"duration": 0.00021695799999976728, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 96, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 96, "message": "TypeError"}], "longrepr": "self = <tests.test_func.FIFODecoratorTest testMethod=test_decorator_needs_rlock>\n\n    def test_decorator_needs_rlock(self):\n        cached = self.decorator(lambda n: n)\n    \n        class RecursiveEquals:\n            def __init__(self, use_cache):\n                self._use_cache = use_cache\n    \n            def __hash__(self):\n                return hash(self._use_cache)\n    \n            def __eq__(self, other):\n                if self._use_cache:\n                    # This call will happen while the cache-lock is held,\n                    # requiring a reentrant lock to avoid deadlock.\n                    cached(self)\n                return self._use_cache == other._use_cache\n    \n        # Prime the cache.\n>       cached(RecursiveEquals(False))\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:96: TypeError"}, "teardown": {"duration": 0.0001863859999997608, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_nocache", "lineno": 31, "outcome": "failed", "keywords": ["test_decorator_nocache", "FIFODecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017319499999990384, "outcome": "passed"}, "call": {"duration": 0.00019494500000005743, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 33, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 33, "message": "TypeError"}], "longrepr": "self = <tests.test_func.FIFODecoratorTest testMethod=test_decorator_nocache>\n\n    def test_decorator_nocache(self):\n>       cached = self.decorator(maxsize=0)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:33: TypeError"}, "teardown": {"duration": 0.00018911100000007508, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_typed", "lineno": 53, "outcome": "failed", "keywords": ["test_decorator_typed", "FIFODecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017226099999989586, "outcome": "passed"}, "call": {"duration": 0.00019918100000015926, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 55, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 55, "message": "TypeError"}], "longrepr": "self = <tests.test_func.FIFODecoratorTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n>       cached = self.decorator(maxsize=2, typed=True)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:55: TypeError"}, "teardown": {"duration": 0.0001774650000001543, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_unbound", "lineno": 42, "outcome": "failed", "keywords": ["test_decorator_unbound", "FIFODecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017029099999987807, "outcome": "passed"}, "call": {"duration": 0.0001935520000002633, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 44, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 44, "message": "TypeError"}], "longrepr": "self = <tests.test_func.FIFODecoratorTest testMethod=test_decorator_unbound>\n\n    def test_decorator_unbound(self):\n>       cached = self.decorator(maxsize=None)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:44: TypeError"}, "teardown": {"duration": 0.0001823870000001726, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::FIFODecoratorTest::test_decorator_user_function", "lineno": 66, "outcome": "failed", "keywords": ["test_decorator_user_function", "FIFODecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016885600000016154, "outcome": "passed"}, "call": {"duration": 0.00019014199999967119, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 69, "message": "AttributeError: 'NoneType' object has no attribute 'cache_parameters'"}, "traceback": [{"path": "tests/test_func.py", "lineno": 69, "message": "AttributeError"}], "longrepr": "self = <tests.test_func.FIFODecoratorTest testMethod=test_decorator_user_function>\n\n    def test_decorator_user_function(self):\n        cached = self.decorator(lambda n: n)\n>       self.assertEqual(cached.cache_parameters(), {\"maxsize\": 128, \"typed\": False})\nE       AttributeError: 'NoneType' object has no attribute 'cache_parameters'\n\ntests/test_func.py:69: AttributeError"}, "teardown": {"duration": 0.0002202899999996788, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator", "lineno": 9, "outcome": "failed", "keywords": ["test_decorator", "LFUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0002438690000001742, "outcome": "passed"}, "call": {"duration": 0.00020796500000042073, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 11, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 11, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LFUDecoratorTest testMethod=test_decorator>\n\n    def test_decorator(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:11: TypeError"}, "teardown": {"duration": 0.00018380999999978442, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_clear", "lineno": 20, "outcome": "failed", "keywords": ["test_decorator_clear", "LFUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001718159999999358, "outcome": "passed"}, "call": {"duration": 0.00019147699999999546, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 22, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 22, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LFUDecoratorTest testMethod=test_decorator_clear>\n\n    def test_decorator_clear(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:22: TypeError"}, "teardown": {"duration": 0.0001754499999999659, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_needs_rlock", "lineno": 77, "outcome": "failed", "keywords": ["test_decorator_needs_rlock", "LFUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016656100000034257, "outcome": "passed"}, "call": {"duration": 0.00021029100000014012, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 96, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 96, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LFUDecoratorTest testMethod=test_decorator_needs_rlock>\n\n    def test_decorator_needs_rlock(self):\n        cached = self.decorator(lambda n: n)\n    \n        class RecursiveEquals:\n            def __init__(self, use_cache):\n                self._use_cache = use_cache\n    \n            def __hash__(self):\n                return hash(self._use_cache)\n    \n            def __eq__(self, other):\n                if self._use_cache:\n                    # This call will happen while the cache-lock is held,\n                    # requiring a reentrant lock to avoid deadlock.\n                    cached(self)\n                return self._use_cache == other._use_cache\n    \n        # Prime the cache.\n>       cached(RecursiveEquals(False))\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:96: TypeError"}, "teardown": {"duration": 0.0001792439999999118, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_nocache", "lineno": 31, "outcome": "failed", "keywords": ["test_decorator_nocache", "LFUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001727149999997124, "outcome": "passed"}, "call": {"duration": 0.00019408899999984186, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 33, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 33, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LFUDecoratorTest testMethod=test_decorator_nocache>\n\n    def test_decorator_nocache(self):\n>       cached = self.decorator(maxsize=0)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:33: TypeError"}, "teardown": {"duration": 0.00017509499999990297, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_typed", "lineno": 53, "outcome": "failed", "keywords": ["test_decorator_typed", "LFUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016567299999969975, "outcome": "passed"}, "call": {"duration": 0.00019891199999966247, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 55, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 55, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LFUDecoratorTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n>       cached = self.decorator(maxsize=2, typed=True)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:55: TypeError"}, "teardown": {"duration": 0.00017770900000035894, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_unbound", "lineno": 42, "outcome": "failed", "keywords": ["test_decorator_unbound", "LFUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017291900000016014, "outcome": "passed"}, "call": {"duration": 0.00019003499999969975, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 44, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 44, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LFUDecoratorTest testMethod=test_decorator_unbound>\n\n    def test_decorator_unbound(self):\n>       cached = self.decorator(maxsize=None)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:44: TypeError"}, "teardown": {"duration": 0.0001735360000001407, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LFUDecoratorTest::test_decorator_user_function", "lineno": 66, "outcome": "failed", "keywords": ["test_decorator_user_function", "LFUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016406900000021096, "outcome": "passed"}, "call": {"duration": 0.0001868890000000789, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 69, "message": "AttributeError: 'NoneType' object has no attribute 'cache_parameters'"}, "traceback": [{"path": "tests/test_func.py", "lineno": 69, "message": "AttributeError"}], "longrepr": "self = <tests.test_func.LFUDecoratorTest testMethod=test_decorator_user_function>\n\n    def test_decorator_user_function(self):\n        cached = self.decorator(lambda n: n)\n>       self.assertEqual(cached.cache_parameters(), {\"maxsize\": 128, \"typed\": False})\nE       AttributeError: 'NoneType' object has no attribute 'cache_parameters'\n\ntests/test_func.py:69: AttributeError"}, "teardown": {"duration": 0.0002307899999998142, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator", "lineno": 9, "outcome": "failed", "keywords": ["test_decorator", "LRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00024050800000008365, "outcome": "passed"}, "call": {"duration": 0.00019851500000012123, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 11, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 11, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LRUDecoratorTest testMethod=test_decorator>\n\n    def test_decorator(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:11: TypeError"}, "teardown": {"duration": 0.00018039699999983227, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_clear", "lineno": 20, "outcome": "failed", "keywords": ["test_decorator_clear", "LRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016961400000026217, "outcome": "passed"}, "call": {"duration": 0.00019127699999987868, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 22, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 22, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LRUDecoratorTest testMethod=test_decorator_clear>\n\n    def test_decorator_clear(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:22: TypeError"}, "teardown": {"duration": 0.00017881100000005645, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_needs_rlock", "lineno": 77, "outcome": "failed", "keywords": ["test_decorator_needs_rlock", "LRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017795900000017184, "outcome": "passed"}, "call": {"duration": 0.00021350300000033684, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 96, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 96, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LRUDecoratorTest testMethod=test_decorator_needs_rlock>\n\n    def test_decorator_needs_rlock(self):\n        cached = self.decorator(lambda n: n)\n    \n        class RecursiveEquals:\n            def __init__(self, use_cache):\n                self._use_cache = use_cache\n    \n            def __hash__(self):\n                return hash(self._use_cache)\n    \n            def __eq__(self, other):\n                if self._use_cache:\n                    # This call will happen while the cache-lock is held,\n                    # requiring a reentrant lock to avoid deadlock.\n                    cached(self)\n                return self._use_cache == other._use_cache\n    \n        # Prime the cache.\n>       cached(RecursiveEquals(False))\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:96: TypeError"}, "teardown": {"duration": 0.00017717299999997493, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_nocache", "lineno": 31, "outcome": "failed", "keywords": ["test_decorator_nocache", "LRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016686500000018256, "outcome": "passed"}, "call": {"duration": 0.00019122899999990395, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 33, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 33, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LRUDecoratorTest testMethod=test_decorator_nocache>\n\n    def test_decorator_nocache(self):\n>       cached = self.decorator(maxsize=0)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:33: TypeError"}, "teardown": {"duration": 0.00017963400000020613, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_typed", "lineno": 53, "outcome": "failed", "keywords": ["test_decorator_typed", "LRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00018353400000004072, "outcome": "passed"}, "call": {"duration": 0.00019698899999998076, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 55, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 55, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LRUDecoratorTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n>       cached = self.decorator(maxsize=2, typed=True)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:55: TypeError"}, "teardown": {"duration": 0.00017477700000023688, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_unbound", "lineno": 42, "outcome": "failed", "keywords": ["test_decorator_unbound", "LRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001669130000001573, "outcome": "passed"}, "call": {"duration": 0.00019689899999963956, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 44, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 44, "message": "TypeError"}], "longrepr": "self = <tests.test_func.LRUDecoratorTest testMethod=test_decorator_unbound>\n\n    def test_decorator_unbound(self):\n>       cached = self.decorator(maxsize=None)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:44: TypeError"}, "teardown": {"duration": 0.00020030200000009657, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::LRUDecoratorTest::test_decorator_user_function", "lineno": 66, "outcome": "failed", "keywords": ["test_decorator_user_function", "LRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017958299999998317, "outcome": "passed"}, "call": {"duration": 0.00019041100000016797, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 69, "message": "AttributeError: 'NoneType' object has no attribute 'cache_parameters'"}, "traceback": [{"path": "tests/test_func.py", "lineno": 69, "message": "AttributeError"}], "longrepr": "self = <tests.test_func.LRUDecoratorTest testMethod=test_decorator_user_function>\n\n    def test_decorator_user_function(self):\n        cached = self.decorator(lambda n: n)\n>       self.assertEqual(cached.cache_parameters(), {\"maxsize\": 128, \"typed\": False})\nE       AttributeError: 'NoneType' object has no attribute 'cache_parameters'\n\ntests/test_func.py:69: AttributeError"}, "teardown": {"duration": 0.00022921899999994721, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator", "lineno": 9, "outcome": "failed", "keywords": ["test_decorator", "MRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0002446899999997143, "outcome": "passed"}, "call": {"duration": 0.000221483999999883, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: 0 == 0"}, "traceback": [{"path": "tests/test_func.py", "lineno": 11, "message": ""}, {"path": "tests/test_func.py", "lineno": 121, "message": "in decorator"}], "longrepr": "self = <tests.test_func.MRUDecoratorTest testMethod=test_decorator>\n\n    def test_decorator(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\n\ntests/test_func.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_func.py:121: in decorator\n    self.assertNotEqual(len(w), 0)\nE   AssertionError: 0 == 0"}, "teardown": {"duration": 0.0002064729999999848, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_clear", "lineno": 20, "outcome": "failed", "keywords": ["test_decorator_clear", "MRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00018806100000023918, "outcome": "passed"}, "call": {"duration": 0.00023477999999999, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: 0 == 0"}, "traceback": [{"path": "tests/test_func.py", "lineno": 22, "message": ""}, {"path": "tests/test_func.py", "lineno": 121, "message": "in decorator"}], "longrepr": "self = <tests.test_func.MRUDecoratorTest testMethod=test_decorator_clear>\n\n    def test_decorator_clear(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\n\ntests/test_func.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_func.py:121: in decorator\n    self.assertNotEqual(len(w), 0)\nE   AssertionError: 0 == 0"}, "teardown": {"duration": 0.00019253899999993607, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_needs_rlock", "lineno": 77, "outcome": "failed", "keywords": ["test_decorator_needs_rlock", "MRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017630799999990288, "outcome": "passed"}, "call": {"duration": 0.00022059800000029384, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: 0 == 0"}, "traceback": [{"path": "tests/test_func.py", "lineno": 79, "message": ""}, {"path": "tests/test_func.py", "lineno": 121, "message": "in decorator"}], "longrepr": "self = <tests.test_func.MRUDecoratorTest testMethod=test_decorator_needs_rlock>\n\n    def test_decorator_needs_rlock(self):\n>       cached = self.decorator(lambda n: n)\n\ntests/test_func.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_func.py:121: in decorator\n    self.assertNotEqual(len(w), 0)\nE   AssertionError: 0 == 0"}, "teardown": {"duration": 0.00019661600000020485, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_nocache", "lineno": 31, "outcome": "failed", "keywords": ["test_decorator_nocache", "MRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001782289999998632, "outcome": "passed"}, "call": {"duration": 0.000223247000000093, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: 0 == 0"}, "traceback": [{"path": "tests/test_func.py", "lineno": 33, "message": ""}, {"path": "tests/test_func.py", "lineno": 121, "message": "in decorator"}], "longrepr": "self = <tests.test_func.MRUDecoratorTest testMethod=test_decorator_nocache>\n\n    def test_decorator_nocache(self):\n>       cached = self.decorator(maxsize=0)(lambda n: n)\n\ntests/test_func.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_func.py:121: in decorator\n    self.assertNotEqual(len(w), 0)\nE   AssertionError: 0 == 0"}, "teardown": {"duration": 0.00018769199999990605, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_typed", "lineno": 53, "outcome": "failed", "keywords": ["test_decorator_typed", "MRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017454699999985834, "outcome": "passed"}, "call": {"duration": 0.00024341499999991356, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: 0 == 0"}, "traceback": [{"path": "tests/test_func.py", "lineno": 55, "message": ""}, {"path": "tests/test_func.py", "lineno": 121, "message": "in decorator"}], "longrepr": "self = <tests.test_func.MRUDecoratorTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n>       cached = self.decorator(maxsize=2, typed=True)(lambda n: n)\n\ntests/test_func.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_func.py:121: in decorator\n    self.assertNotEqual(len(w), 0)\nE   AssertionError: 0 == 0"}, "teardown": {"duration": 0.0001946799999998916, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_unbound", "lineno": 42, "outcome": "failed", "keywords": ["test_decorator_unbound", "MRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017076700000018263, "outcome": "passed"}, "call": {"duration": 0.0002258190000001825, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: 0 == 0"}, "traceback": [{"path": "tests/test_func.py", "lineno": 44, "message": ""}, {"path": "tests/test_func.py", "lineno": 121, "message": "in decorator"}], "longrepr": "self = <tests.test_func.MRUDecoratorTest testMethod=test_decorator_unbound>\n\n    def test_decorator_unbound(self):\n>       cached = self.decorator(maxsize=None)(lambda n: n)\n\ntests/test_func.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_func.py:121: in decorator\n    self.assertNotEqual(len(w), 0)\nE   AssertionError: 0 == 0"}, "teardown": {"duration": 0.00018588800000030048, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::MRUDecoratorTest::test_decorator_user_function", "lineno": 66, "outcome": "failed", "keywords": ["test_decorator_user_function", "MRUDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017304900000025825, "outcome": "passed"}, "call": {"duration": 0.00021989799999966309, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: 0 == 0"}, "traceback": [{"path": "tests/test_func.py", "lineno": 68, "message": ""}, {"path": "tests/test_func.py", "lineno": 121, "message": "in decorator"}], "longrepr": "self = <tests.test_func.MRUDecoratorTest testMethod=test_decorator_user_function>\n\n    def test_decorator_user_function(self):\n>       cached = self.decorator(lambda n: n)\n\ntests/test_func.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_func.py:121: in decorator\n    self.assertNotEqual(len(w), 0)\nE   AssertionError: 0 == 0"}, "teardown": {"duration": 0.00022945800000018224, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator", "lineno": 9, "outcome": "failed", "keywords": ["test_decorator", "RRDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00026347299999995855, "outcome": "passed"}, "call": {"duration": 0.00020500199999995417, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 11, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 11, "message": "TypeError"}], "longrepr": "self = <tests.test_func.RRDecoratorTest testMethod=test_decorator>\n\n    def test_decorator(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:11: TypeError"}, "teardown": {"duration": 0.00018138200000006321, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_clear", "lineno": 20, "outcome": "failed", "keywords": ["test_decorator_clear", "RRDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001690339999997903, "outcome": "passed"}, "call": {"duration": 0.00019619899999989698, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 22, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 22, "message": "TypeError"}], "longrepr": "self = <tests.test_func.RRDecoratorTest testMethod=test_decorator_clear>\n\n    def test_decorator_clear(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:22: TypeError"}, "teardown": {"duration": 0.00018307300000008908, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_needs_rlock", "lineno": 77, "outcome": "failed", "keywords": ["test_decorator_needs_rlock", "RRDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001855040000000585, "outcome": "passed"}, "call": {"duration": 0.0002238649999997122, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 96, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 96, "message": "TypeError"}], "longrepr": "self = <tests.test_func.RRDecoratorTest testMethod=test_decorator_needs_rlock>\n\n    def test_decorator_needs_rlock(self):\n        cached = self.decorator(lambda n: n)\n    \n        class RecursiveEquals:\n            def __init__(self, use_cache):\n                self._use_cache = use_cache\n    \n            def __hash__(self):\n                return hash(self._use_cache)\n    \n            def __eq__(self, other):\n                if self._use_cache:\n                    # This call will happen while the cache-lock is held,\n                    # requiring a reentrant lock to avoid deadlock.\n                    cached(self)\n                return self._use_cache == other._use_cache\n    \n        # Prime the cache.\n>       cached(RecursiveEquals(False))\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:96: TypeError"}, "teardown": {"duration": 0.0001807540000000607, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_nocache", "lineno": 31, "outcome": "failed", "keywords": ["test_decorator_nocache", "RRDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016889099999994883, "outcome": "passed"}, "call": {"duration": 0.0001960599999999424, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 33, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 33, "message": "TypeError"}], "longrepr": "self = <tests.test_func.RRDecoratorTest testMethod=test_decorator_nocache>\n\n    def test_decorator_nocache(self):\n>       cached = self.decorator(maxsize=0)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:33: TypeError"}, "teardown": {"duration": 0.0001783639999999309, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_typed", "lineno": 53, "outcome": "failed", "keywords": ["test_decorator_typed", "RRDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00019032500000015773, "outcome": "passed"}, "call": {"duration": 0.00019348199999980054, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 55, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 55, "message": "TypeError"}], "longrepr": "self = <tests.test_func.RRDecoratorTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n>       cached = self.decorator(maxsize=2, typed=True)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:55: TypeError"}, "teardown": {"duration": 0.0001813959999998893, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_unbound", "lineno": 42, "outcome": "failed", "keywords": ["test_decorator_unbound", "RRDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00019193299999997748, "outcome": "passed"}, "call": {"duration": 0.00024866499999998126, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 44, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 44, "message": "TypeError"}], "longrepr": "self = <tests.test_func.RRDecoratorTest testMethod=test_decorator_unbound>\n\n    def test_decorator_unbound(self):\n>       cached = self.decorator(maxsize=None)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:44: TypeError"}, "teardown": {"duration": 0.00017852600000001217, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::RRDecoratorTest::test_decorator_user_function", "lineno": 66, "outcome": "failed", "keywords": ["test_decorator_user_function", "RRDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001725779999999233, "outcome": "passed"}, "call": {"duration": 0.0001973390000000741, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 69, "message": "AttributeError: 'NoneType' object has no attribute 'cache_parameters'"}, "traceback": [{"path": "tests/test_func.py", "lineno": 69, "message": "AttributeError"}], "longrepr": "self = <tests.test_func.RRDecoratorTest testMethod=test_decorator_user_function>\n\n    def test_decorator_user_function(self):\n        cached = self.decorator(lambda n: n)\n>       self.assertEqual(cached.cache_parameters(), {\"maxsize\": 128, \"typed\": False})\nE       AttributeError: 'NoneType' object has no attribute 'cache_parameters'\n\ntests/test_func.py:69: AttributeError"}, "teardown": {"duration": 0.00022844300000013362, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator", "lineno": 9, "outcome": "failed", "keywords": ["test_decorator", "TTLDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00024336899999966022, "outcome": "passed"}, "call": {"duration": 0.00019675100000027257, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 11, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 11, "message": "TypeError"}], "longrepr": "self = <tests.test_func.TTLDecoratorTest testMethod=test_decorator>\n\n    def test_decorator(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:11: TypeError"}, "teardown": {"duration": 0.00017710699999984314, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_clear", "lineno": 20, "outcome": "failed", "keywords": ["test_decorator_clear", "TTLDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00017129200000010059, "outcome": "passed"}, "call": {"duration": 0.0001905859999999926, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 22, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 22, "message": "TypeError"}], "longrepr": "self = <tests.test_func.TTLDecoratorTest testMethod=test_decorator_clear>\n\n    def test_decorator_clear(self):\n>       cached = self.decorator(maxsize=2)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:22: TypeError"}, "teardown": {"duration": 0.00017744499999983177, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_needs_rlock", "lineno": 77, "outcome": "failed", "keywords": ["test_decorator_needs_rlock", "TTLDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001681399999999833, "outcome": "passed"}, "call": {"duration": 0.0002108189999998622, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 96, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 96, "message": "TypeError"}], "longrepr": "self = <tests.test_func.TTLDecoratorTest testMethod=test_decorator_needs_rlock>\n\n    def test_decorator_needs_rlock(self):\n        cached = self.decorator(lambda n: n)\n    \n        class RecursiveEquals:\n            def __init__(self, use_cache):\n                self._use_cache = use_cache\n    \n            def __hash__(self):\n                return hash(self._use_cache)\n    \n            def __eq__(self, other):\n                if self._use_cache:\n                    # This call will happen while the cache-lock is held,\n                    # requiring a reentrant lock to avoid deadlock.\n                    cached(self)\n                return self._use_cache == other._use_cache\n    \n        # Prime the cache.\n>       cached(RecursiveEquals(False))\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:96: TypeError"}, "teardown": {"duration": 0.00018028100000000435, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_nocache", "lineno": 31, "outcome": "failed", "keywords": ["test_decorator_nocache", "TTLDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.0001735739999997321, "outcome": "passed"}, "call": {"duration": 0.00018905800000013073, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 33, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 33, "message": "TypeError"}], "longrepr": "self = <tests.test_func.TTLDecoratorTest testMethod=test_decorator_nocache>\n\n    def test_decorator_nocache(self):\n>       cached = self.decorator(maxsize=0)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:33: TypeError"}, "teardown": {"duration": 0.00017600499999970154, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_typed", "lineno": 53, "outcome": "failed", "keywords": ["test_decorator_typed", "TTLDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016683299999975532, "outcome": "passed"}, "call": {"duration": 0.0001969120000002711, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 55, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 55, "message": "TypeError"}], "longrepr": "self = <tests.test_func.TTLDecoratorTest testMethod=test_decorator_typed>\n\n    def test_decorator_typed(self):\n>       cached = self.decorator(maxsize=2, typed=True)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:55: TypeError"}, "teardown": {"duration": 0.00019162800000005475, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_unbound", "lineno": 42, "outcome": "failed", "keywords": ["test_decorator_unbound", "TTLDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.000172163000000225, "outcome": "passed"}, "call": {"duration": 0.00019082999999975314, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 44, "message": "TypeError: 'NoneType' object is not callable"}, "traceback": [{"path": "tests/test_func.py", "lineno": 44, "message": "TypeError"}], "longrepr": "self = <tests.test_func.TTLDecoratorTest testMethod=test_decorator_unbound>\n\n    def test_decorator_unbound(self):\n>       cached = self.decorator(maxsize=None)(lambda n: n)\nE       TypeError: 'NoneType' object is not callable\n\ntests/test_func.py:44: TypeError"}, "teardown": {"duration": 0.00017701600000030737, "outcome": "passed"}}, {"nodeid": "tests/test_func.py::TTLDecoratorTest::test_decorator_user_function", "lineno": 66, "outcome": "failed", "keywords": ["test_decorator_user_function", "TTLDecoratorTest", "test_func.py", "tests", "testbed", ""], "setup": {"duration": 0.00016910700000005718, "outcome": "passed"}, "call": {"duration": 0.0001948119999997111, "outcome": "failed", "crash": {"path": "/testbed/tests/test_func.py", "lineno": 69, "message": "AttributeError: 'NoneType' object has no attribute 'cache_parameters'"}, "traceback": [{"path": "tests/test_func.py", "lineno": 69, "message": "AttributeError"}], "longrepr": "self = <tests.test_func.TTLDecoratorTest testMethod=test_decorator_user_function>\n\n    def test_decorator_user_function(self):\n        cached = self.decorator(lambda n: n)\n>       self.assertEqual(cached.cache_parameters(), {\"maxsize\": 128, \"typed\": False})\nE       AttributeError: 'NoneType' object has no attribute 'cache_parameters'\n\ntests/test_func.py:69: AttributeError"}, "teardown": {"duration": 0.00022614600000014917, "outcome": "passed"}}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_addkeys", "lineno": 74, "outcome": "failed", "keywords": ["test_addkeys", "CacheKeysTest", "test_keys.py", "tests", "testbed", ""], "setup": {"duration": 0.00026375099999986773, "outcome": "passed"}, "call": {"duration": 0.00021983300000005812, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 675, "message": "AssertionError: None is not an instance of <class 'tuple'>"}, "traceback": [{"path": "tests/test_keys.py", "lineno": 76, "message": "AssertionError"}], "longrepr": "self = <tests.test_keys.CacheKeysTest testMethod=test_addkeys>\nkey = <function hashkey at 0x7fe1ab419120>\n\n    def test_addkeys(self, key=cachetools.keys.hashkey):\n>       self.assertIsInstance(key(), tuple)\nE       AssertionError: None is not an instance of <class 'tuple'>\n\ntests/test_keys.py:76: AssertionError"}, "teardown": {"duration": 0.00018833900000014836, "outcome": "passed"}}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_hashkey", "lineno": 6, "outcome": "failed", "keywords": ["test_hashkey", "CacheKeysTest", "test_keys.py", "tests", "testbed", ""], "setup": {"duration": 0.0001692489999998159, "outcome": "passed"}, "call": {"duration": 0.0002137969999997935, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: None == None"}, "traceback": [{"path": "tests/test_keys.py", "lineno": 14, "message": "AssertionError"}], "longrepr": "self = <tests.test_keys.CacheKeysTest testMethod=test_hashkey>\nkey = <function hashkey at 0x7fe1ab419120>\n\n    def test_hashkey(self, key=cachetools.keys.hashkey):\n        self.assertEqual(key(), key())\n        self.assertEqual(hash(key()), hash(key()))\n        self.assertEqual(key(1, 2, 3), key(1, 2, 3))\n        self.assertEqual(hash(key(1, 2, 3)), hash(key(1, 2, 3)))\n        self.assertEqual(key(1, 2, 3, x=0), key(1, 2, 3, x=0))\n        self.assertEqual(hash(key(1, 2, 3, x=0)), hash(key(1, 2, 3, x=0)))\n>       self.assertNotEqual(key(1, 2, 3), key(3, 2, 1))\nE       AssertionError: None == None\n\ntests/test_keys.py:14: AssertionError"}, "teardown": {"duration": 0.0001784059999998533, "outcome": "passed"}}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_pickle", "lineno": 80, "outcome": "failed", "keywords": ["test_pickle", "CacheKeysTest", "test_keys.py", "tests", "testbed", ""], "setup": {"duration": 0.00017443400000027864, "outcome": "passed"}, "call": {"duration": 0.00020789600000004071, "outcome": "failed", "crash": {"path": "/testbed/tests/test_keys.py", "lineno": 86, "message": "AttributeError: 'NoneType' object has no attribute '__dict__'. Did you mean: '__dir__'?"}, "traceback": [{"path": "tests/test_keys.py", "lineno": 86, "message": "AttributeError"}], "longrepr": "self = <tests.test_keys.CacheKeysTest testMethod=test_pickle>\nkey = <function hashkey at 0x7fe1ab419120>\n\n    def test_pickle(self, key=cachetools.keys.hashkey):\n        import pickle\n    \n        for k in [key(), key(\"abc\"), key(\"abc\", 123), key(\"abc\", q=\"abc\")]:\n            # white-box test: assert cached hash value is not pickled\n>           self.assertEqual(len(k.__dict__), 0)\nE           AttributeError: 'NoneType' object has no attribute '__dict__'. Did you mean: '__dir__'?\n\ntests/test_keys.py:86: AttributeError"}, "teardown": {"duration": 0.00024857800000033237, "outcome": "passed"}}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_typedkey", "lineno": 41, "outcome": "failed", "keywords": ["test_typedkey", "CacheKeysTest", "test_keys.py", "tests", "testbed", ""], "setup": {"duration": 0.00020108199999979703, "outcome": "passed"}, "call": {"duration": 0.000244152000000053, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: None == None"}, "traceback": [{"path": "tests/test_keys.py", "lineno": 49, "message": "AssertionError"}], "longrepr": "self = <tests.test_keys.CacheKeysTest testMethod=test_typedkey>\nkey = <function typedkey at 0x7fe1ab419480>\n\n    def test_typedkey(self, key=cachetools.keys.typedkey):\n        self.assertEqual(key(), key())\n        self.assertEqual(hash(key()), hash(key()))\n        self.assertEqual(key(1, 2, 3), key(1, 2, 3))\n        self.assertEqual(hash(key(1, 2, 3)), hash(key(1, 2, 3)))\n        self.assertEqual(key(1, 2, 3, x=0), key(1, 2, 3, x=0))\n        self.assertEqual(hash(key(1, 2, 3, x=0)), hash(key(1, 2, 3, x=0)))\n>       self.assertNotEqual(key(1, 2, 3), key(3, 2, 1))\nE       AssertionError: None == None\n\ntests/test_keys.py:49: AssertionError"}, "teardown": {"duration": 0.00019051400000025254, "outcome": "passed"}}, {"nodeid": "tests/test_keys.py::CacheKeysTest::test_typedmethodkey", "lineno": 57, "outcome": "failed", "keywords": ["test_typedmethodkey", "CacheKeysTest", "test_keys.py", "tests", "testbed", ""], "setup": {"duration": 0.0001774719999998453, "outcome": "passed"}, "call": {"duration": 0.00024149400000039734, "outcome": "failed", "crash": {"path": "/usr/lib/python3.10/unittest/case.py", "lineno": 854, "message": "AssertionError: None == None"}, "traceback": [{"path": "tests/test_keys.py", "lineno": 66, "message": "AssertionError"}], "longrepr": "self = <tests.test_keys.CacheKeysTest testMethod=test_typedmethodkey>\nkey = <function typedmethodkey at 0x7fe1ab419510>\n\n    def test_typedmethodkey(self, key=cachetools.keys.typedmethodkey):\n        # similar to typedkey(), but ignores its first positional argument\n        self.assertEqual(key(\"x\"), key(\"y\"))\n        self.assertEqual(hash(key(\"x\")), hash(key(\"y\")))\n        self.assertEqual(key(\"x\", 1, 2, 3), key(\"y\", 1, 2, 3))\n        self.assertEqual(hash(key(\"x\", 1, 2, 3)), hash(key(\"y\", 1, 2, 3)))\n        self.assertEqual(key(\"x\", 1, 2, 3, x=0), key(\"y\", 1, 2, 3, x=0))\n        self.assertEqual(hash(key(\"x\", 1, 2, 3, x=0)), hash(key(\"y\", 1, 2, 3, x=0)))\n>       self.assertNotEqual(key(\"x\", 1, 2, 3), key(\"x\", 3, 2, 1))\nE       AssertionError: None == None\n\ntests/test_keys.py:66: AssertionError"}, "teardown": {"duration": 0.0002264439999999368, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00026072199999971346, "outcome": "passed"}, "call": {"duration": 0.00020830199999988253, "outcome": "passed"}, "teardown": {"duration": 0.00015150200000002556, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00016196900000009506, "outcome": "passed"}, "call": {"duration": 0.00022286999999998613, "outcome": "passed"}, "teardown": {"duration": 0.00013512900000023365, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00015654200000003726, "outcome": "passed"}, "call": {"duration": 0.00026354600000022543, "outcome": "passed"}, "teardown": {"duration": 0.00013161100000003145, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.0001613990000000065, "outcome": "passed"}, "call": {"duration": 0.0002980230000000361, "outcome": "passed"}, "teardown": {"duration": 0.0001324259999999633, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00015959700000012234, "outcome": "passed"}, "call": {"duration": 0.00020712199999994851, "outcome": "passed"}, "teardown": {"duration": 0.0001319470000002987, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_lfu", "lineno": 10, "outcome": "passed", "keywords": ["test_lfu", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00015481500000014137, "outcome": "passed"}, "call": {"duration": 0.0002034149999996515, "outcome": "passed"}, "teardown": {"duration": 0.00012928399999978524, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_lfu_getsizeof", "lineno": 28, "outcome": "passed", "keywords": ["test_lfu_getsizeof", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.0001479519999998402, "outcome": "passed"}, "call": {"duration": 0.00020559099999983843, "outcome": "passed"}, "teardown": {"duration": 0.00012940800000027508, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00014702299999980184, "outcome": "passed"}, "call": {"duration": 0.00030213199999984397, "outcome": "passed"}, "teardown": {"duration": 0.0001517980000000918, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00015621299999990512, "outcome": "passed"}, "call": {"duration": 0.0002561719999998324, "outcome": "passed"}, "teardown": {"duration": 0.00014226399999994754, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00015449900000019667, "outcome": "passed"}, "call": {"duration": 0.00030620900000011275, "outcome": "passed"}, "teardown": {"duration": 0.00013396499999984712, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00015221499999995558, "outcome": "passed"}, "call": {"duration": 0.004326716999999647, "outcome": "passed"}, "teardown": {"duration": 0.00014774800000028065, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00016430599999983642, "outcome": "passed"}, "call": {"duration": 0.000210961000000065, "outcome": "passed"}, "teardown": {"duration": 0.0001352530000002794, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00019100299999985637, "outcome": "passed"}, "call": {"duration": 0.00020861000000005347, "outcome": "passed"}, "teardown": {"duration": 0.0001309560000000154, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.00014931699999998216, "outcome": "passed"}, "call": {"duration": 0.00017523200000013617, "outcome": "passed"}, "teardown": {"duration": 0.00013008899999977785, "outcome": "passed"}}, {"nodeid": "tests/test_lfu.py::LFUCacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "LFUCacheTest", "test_lfu.py", "tests", "testbed", ""], "setup": {"duration": 0.0001501580000002889, "outcome": "passed"}, "call": {"duration": 0.00020728599999975117, "outcome": "passed"}, "teardown": {"duration": 0.00017468000000020467, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.000244608000000035, "outcome": "passed"}, "call": {"duration": 0.00019591200000013131, "outcome": "passed"}, "teardown": {"duration": 0.00013569600000007398, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015591799999992162, "outcome": "passed"}, "call": {"duration": 0.00019745599999998475, "outcome": "passed"}, "teardown": {"duration": 0.00013324200000042197, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014941899999998398, "outcome": "passed"}, "call": {"duration": 0.00022743999999974562, "outcome": "passed"}, "teardown": {"duration": 0.00013183100000002668, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015112200000011455, "outcome": "passed"}, "call": {"duration": 0.0002749510000001898, "outcome": "passed"}, "teardown": {"duration": 0.0001413449999998484, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00016003900000027826, "outcome": "passed"}, "call": {"duration": 0.0001932760000000755, "outcome": "passed"}, "teardown": {"duration": 0.0001325680000001661, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_lru", "lineno": 10, "outcome": "passed", "keywords": ["test_lru", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.000159130999999757, "outcome": "passed"}, "call": {"duration": 0.00019138699999965425, "outcome": "passed"}, "teardown": {"duration": 0.0001292289999996754, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_lru_getsizeof", "lineno": 35, "outcome": "passed", "keywords": ["test_lru_getsizeof", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001515099999997993, "outcome": "passed"}, "call": {"duration": 0.00020595499999975786, "outcome": "passed"}, "teardown": {"duration": 0.0001301400000000008, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014833299999983396, "outcome": "passed"}, "call": {"duration": 0.00027201199999993264, "outcome": "passed"}, "teardown": {"duration": 0.00014038400000027096, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015455899999983203, "outcome": "passed"}, "call": {"duration": 0.00024846200000006036, "outcome": "passed"}, "teardown": {"duration": 0.00014455300000015825, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015106500000028333, "outcome": "passed"}, "call": {"duration": 0.00029499600000004733, "outcome": "passed"}, "teardown": {"duration": 0.00013364399999993282, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001530199999999482, "outcome": "passed"}, "call": {"duration": 0.004793206999999633, "outcome": "passed"}, "teardown": {"duration": 0.00014719499999982233, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00016158200000004896, "outcome": "passed"}, "call": {"duration": 0.000219253999999669, "outcome": "passed"}, "teardown": {"duration": 0.00013190100000004534, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001505659999998521, "outcome": "passed"}, "call": {"duration": 0.00019014000000039388, "outcome": "passed"}, "teardown": {"duration": 0.00013993799999978407, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014782499999999033, "outcome": "passed"}, "call": {"duration": 0.00016786700000004373, "outcome": "passed"}, "teardown": {"duration": 0.00034057800000031335, "outcome": "passed"}}, {"nodeid": "tests/test_lru.py::LRUCacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "LRUCacheTest", "test_lru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001617480000000171, "outcome": "passed"}, "call": {"duration": 0.00019315000000030835, "outcome": "passed"}, "teardown": {"duration": 0.00017868499999984522, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.0002441800000001493, "outcome": "passed"}, "call": {"duration": 0.00021357199999982868, "outcome": "passed"}, "teardown": {"duration": 0.00014149699999999044, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00018191400000011626, "outcome": "passed"}, "call": {"duration": 0.00022748999999988584, "outcome": "passed"}, "teardown": {"duration": 0.000146797999999837, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_evict__with_access", "lineno": 28, "outcome": "passed", "keywords": ["test_evict__with_access", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015572600000002268, "outcome": "passed"}, "call": {"duration": 0.0001967160000000412, "outcome": "passed"}, "teardown": {"duration": 0.00012891400000025754, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_evict__with_delete", "lineno": 44, "outcome": "passed", "keywords": ["test_evict__with_delete", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001513850000001149, "outcome": "passed"}, "call": {"duration": 0.00019352800000005388, "outcome": "passed"}, "teardown": {"duration": 0.00012722200000014894, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_evict__writes_only", "lineno": 12, "outcome": "passed", "keywords": ["test_evict__writes_only", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015765099999986987, "outcome": "passed"}, "call": {"duration": 0.0001867920000000467, "outcome": "passed"}, "teardown": {"duration": 0.0001553820000004258, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015097400000030348, "outcome": "passed"}, "call": {"duration": 0.00025397099999979744, "outcome": "passed"}, "teardown": {"duration": 0.0001374470000001793, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015775700000020265, "outcome": "passed"}, "call": {"duration": 0.0002983430000003118, "outcome": "passed"}, "teardown": {"duration": 0.0001351749999995988, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001552189999998177, "outcome": "passed"}, "call": {"duration": 0.00020715399999993167, "outcome": "passed"}, "teardown": {"duration": 0.00013390699999993316, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015152699999987362, "outcome": "passed"}, "call": {"duration": 0.00028024399999981853, "outcome": "passed"}, "teardown": {"duration": 0.0001341840000002037, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001499060000003105, "outcome": "passed"}, "call": {"duration": 0.00025447400000011555, "outcome": "passed"}, "teardown": {"duration": 0.00014382099999998843, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00024083800000029854, "outcome": "passed"}, "call": {"duration": 0.0002994659999999705, "outcome": "passed"}, "teardown": {"duration": 0.00014745999999998816, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015415200000035156, "outcome": "passed"}, "call": {"duration": 0.005201404000000132, "outcome": "passed"}, "teardown": {"duration": 0.00016330899999994486, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00016954300000016076, "outcome": "passed"}, "call": {"duration": 0.00022175199999985296, "outcome": "passed"}, "teardown": {"duration": 0.00013439899999978522, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015989700000007545, "outcome": "passed"}, "call": {"duration": 0.00020079399999994862, "outcome": "passed"}, "teardown": {"duration": 0.00012894299999999248, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001633169999997186, "outcome": "passed"}, "call": {"duration": 0.00017155299999993545, "outcome": "passed"}, "teardown": {"duration": 0.00012831700000015545, "outcome": "passed"}}, {"nodeid": "tests/test_mru.py::MRUCacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "MRUCacheTest", "test_mru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015242500000001158, "outcome": "passed"}, "call": {"duration": 0.00021010699999957083, "outcome": "passed"}, "teardown": {"duration": 0.0001778520000002004, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00025626200000017363, "outcome": "passed"}, "call": {"duration": 0.00019033500000009695, "outcome": "passed"}, "teardown": {"duration": 0.0001308429999999916, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00014980499999994734, "outcome": "passed"}, "call": {"duration": 0.00020270200000016558, "outcome": "passed"}, "teardown": {"duration": 0.00012817999999992225, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00014790300000022683, "outcome": "passed"}, "call": {"duration": 0.00022889099999989782, "outcome": "passed"}, "teardown": {"duration": 0.00013105000000024347, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.0001445260000001447, "outcome": "passed"}, "call": {"duration": 0.0002723870000003181, "outcome": "passed"}, "teardown": {"duration": 0.00014597999999965694, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.0001585010000000331, "outcome": "passed"}, "call": {"duration": 0.0001915280000002184, "outcome": "passed"}, "teardown": {"duration": 0.00013035799999983055, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00016104299999986083, "outcome": "passed"}, "call": {"duration": 0.00041400899999999297, "outcome": "passed"}, "teardown": {"duration": 0.0001337310000000258, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.0001537680000001096, "outcome": "passed"}, "call": {"duration": 0.00023473400000018074, "outcome": "passed"}, "teardown": {"duration": 0.00012988999999974382, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.0001647730000002845, "outcome": "passed"}, "call": {"duration": 0.0005505090000004209, "outcome": "passed"}, "teardown": {"duration": 0.00014350199999979552, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00015631599999998969, "outcome": "passed"}, "call": {"duration": 0.0026762759999998664, "outcome": "passed"}, "teardown": {"duration": 0.0001461890000000743, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00015770800000014518, "outcome": "passed"}, "call": {"duration": 0.0001973579999998698, "outcome": "passed"}, "teardown": {"duration": 0.00014270000000005112, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00015209099999990983, "outcome": "passed"}, "call": {"duration": 0.00018639899999994824, "outcome": "passed"}, "teardown": {"duration": 0.00012761700000041287, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.0001505539999997474, "outcome": "passed"}, "call": {"duration": 0.0001634629999998083, "outcome": "passed"}, "teardown": {"duration": 0.0001260319999998316, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_rr", "lineno": 10, "outcome": "passed", "keywords": ["test_rr", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.0001470219999997191, "outcome": "passed"}, "call": {"duration": 0.00018439300000006043, "outcome": "passed"}, "teardown": {"duration": 0.0001300550000000733, "outcome": "passed"}}, {"nodeid": "tests/test_rr.py::RRCacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "RRCacheTest", "test_rr.py", "tests", "testbed", ""], "setup": {"duration": 0.00015005999999972985, "outcome": "passed"}, "call": {"duration": 0.0001816059999999453, "outcome": "passed"}, "teardown": {"duration": 0.0001688220000000129, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00023533799999997385, "outcome": "passed"}, "call": {"duration": 0.00021680199999973837, "outcome": "passed"}, "teardown": {"duration": 0.00012768999999979158, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014738700000016536, "outcome": "passed"}, "call": {"duration": 0.00023999800000007454, "outcome": "passed"}, "teardown": {"duration": 0.00013445600000006053, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015159300000000542, "outcome": "passed"}, "call": {"duration": 0.00030250899999995084, "outcome": "passed"}, "teardown": {"duration": 0.0001427299999998688, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014997500000024644, "outcome": "passed"}, "call": {"duration": 0.00034087800000026647, "outcome": "passed"}, "teardown": {"duration": 0.00014032400000019152, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014969500000017177, "outcome": "passed"}, "call": {"duration": 0.0002219939999998921, "outcome": "passed"}, "teardown": {"duration": 0.00012581400000000187, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014779500000017265, "outcome": "passed"}, "call": {"duration": 0.00037398400000032694, "outcome": "passed"}, "teardown": {"duration": 0.00014075599999996413, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00016100599999990806, "outcome": "passed"}, "call": {"duration": 0.0002943349999999789, "outcome": "passed"}, "teardown": {"duration": 0.00013678100000014126, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00016535500000003367, "outcome": "passed"}, "call": {"duration": 0.00040780600000012157, "outcome": "passed"}, "teardown": {"duration": 0.00013945399999970576, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001619770000003129, "outcome": "passed"}, "call": {"duration": 0.01700182799999972, "outcome": "passed"}, "teardown": {"duration": 0.00018698600000011112, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00019125299999966927, "outcome": "passed"}, "call": {"duration": 0.00027453500000040876, "outcome": "passed"}, "teardown": {"duration": 0.00014466299999993382, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001727150000001565, "outcome": "passed"}, "call": {"duration": 0.00023299700000034562, "outcome": "passed"}, "teardown": {"duration": 0.00013271300000017305, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015425000000002242, "outcome": "passed"}, "call": {"duration": 0.0001873020000000558, "outcome": "passed"}, "teardown": {"duration": 0.00013043999999995393, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu", "lineno": 33, "outcome": "passed", "keywords": ["test_ttu", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015516599999987335, "outcome": "passed"}, "call": {"duration": 0.00032153200000006876, "outcome": "passed"}, "teardown": {"duration": 0.00013128100000026066, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_atomic", "lineno": 205, "outcome": "passed", "keywords": ["test_ttu_atomic", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015108900000004866, "outcome": "passed"}, "call": {"duration": 0.00022727299999969475, "outcome": "passed"}, "teardown": {"duration": 0.0001332920000001181, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_expire", "lineno": 140, "outcome": "passed", "keywords": ["test_ttu_expire", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001562029999999659, "outcome": "passed"}, "call": {"duration": 0.00024702699999989974, "outcome": "passed"}, "teardown": {"duration": 0.00014320099999975966, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_expired", "lineno": 190, "outcome": "passed", "keywords": ["test_ttu_expired", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.0001503769999997573, "outcome": "passed"}, "call": {"duration": 0.00018910299999985725, "outcome": "passed"}, "teardown": {"duration": 0.0001276130000000819, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_lru", "lineno": 110, "outcome": "passed", "keywords": ["test_ttu_lru", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00015836999999985224, "outcome": "passed"}, "call": {"duration": 0.0002240439999998678, "outcome": "passed"}, "teardown": {"duration": 0.0001277449999999014, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_reverse_insert", "lineno": 229, "outcome": "passed", "keywords": ["test_ttu_reverse_insert", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014426099999997888, "outcome": "passed"}, "call": {"duration": 0.00022524600000028983, "outcome": "passed"}, "teardown": {"duration": 0.0001252250000001176, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_ttu_tuple_key", "lineno": 219, "outcome": "passed", "keywords": ["test_ttu_tuple_key", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.00014477200000007073, "outcome": "passed"}, "call": {"duration": 0.0002029239999998822, "outcome": "passed"}, "teardown": {"duration": 0.00013532100000013259, "outcome": "passed"}}, {"nodeid": "tests/test_tlru.py::TLRUCacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "TLRUCacheTest", "test_tlru.py", "tests", "testbed", ""], "setup": {"duration": 0.000152368999999819, "outcome": "passed"}, "call": {"duration": 0.0002225060000000667, "outcome": "passed"}, "teardown": {"duration": 0.0001868439999999083, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_defaults", "lineno": 6, "outcome": "passed", "keywords": ["test_defaults", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.0002491780000002386, "outcome": "passed"}, "call": {"duration": 0.00020164200000039045, "outcome": "passed"}, "teardown": {"duration": 0.00013252099999983002, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_delete", "lineno": 52, "outcome": "passed", "keywords": ["test_delete", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00014985900000041852, "outcome": "passed"}, "call": {"duration": 0.00022387599999973418, "outcome": "passed"}, "teardown": {"duration": 0.00014983499999976502, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_getsizeof_param", "lineno": 255, "outcome": "passed", "keywords": ["test_getsizeof_param", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015482799999988472, "outcome": "passed"}, "call": {"duration": 0.0002849109999996102, "outcome": "passed"}, "teardown": {"duration": 0.00013239700000022836, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_getsizeof_subclass", "lineno": 258, "outcome": "passed", "keywords": ["test_getsizeof_subclass", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015459199999989792, "outcome": "passed"}, "call": {"duration": 0.00033799900000008876, "outcome": "passed"}, "teardown": {"duration": 0.00013497100000003925, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_insert", "lineno": 16, "outcome": "passed", "keywords": ["test_insert", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015268699999992918, "outcome": "passed"}, "call": {"duration": 0.00021948500000013027, "outcome": "passed"}, "teardown": {"duration": 0.0001281909999999442, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_missing", "lineno": 119, "outcome": "passed", "keywords": ["test_missing", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015755399999983766, "outcome": "passed"}, "call": {"duration": 0.00036294600000008614, "outcome": "passed"}, "teardown": {"duration": 0.00013990299999999678, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_missing_getsizeof", "lineno": 178, "outcome": "passed", "keywords": ["test_missing_getsizeof", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00016783700000022606, "outcome": "passed"}, "call": {"duration": 0.00028998499999977057, "outcome": "passed"}, "teardown": {"duration": 0.0001316030000002577, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_pickle", "lineno": 265, "outcome": "passed", "keywords": ["test_pickle", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.0001615030000001738, "outcome": "passed"}, "call": {"duration": 0.00040479500000012436, "outcome": "passed"}, "teardown": {"duration": 0.00014300200000016972, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_pickle_maxsize", "lineno": 290, "outcome": "passed", "keywords": ["test_pickle_maxsize", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00017225300000012211, "outcome": "passed"}, "call": {"duration": 0.013114630999999655, "outcome": "passed"}, "teardown": {"duration": 0.00017052699999986487, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_pop", "lineno": 76, "outcome": "passed", "keywords": ["test_pop", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00018772299999980646, "outcome": "passed"}, "call": {"duration": 0.0002687169999999739, "outcome": "passed"}, "teardown": {"duration": 0.00013958599999996935, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_popitem", "lineno": 96, "outcome": "passed", "keywords": ["test_popitem", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.000160847000000075, "outcome": "passed"}, "call": {"duration": 0.00022844599999993775, "outcome": "passed"}, "teardown": {"duration": 0.000133921999999842, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_popitem_exception_context", "lineno": 108, "outcome": "passed", "keywords": ["test_popitem_exception_context", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015616600000001313, "outcome": "passed"}, "call": {"duration": 0.0001953949999999871, "outcome": "passed"}, "teardown": {"duration": 0.00013375099999990425, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl", "lineno": 30, "outcome": "passed", "keywords": ["test_ttl", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015688700000016098, "outcome": "passed"}, "call": {"duration": 0.000281553000000212, "outcome": "passed"}, "teardown": {"duration": 0.0001345049999996739, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_atomic", "lineno": 165, "outcome": "passed", "keywords": ["test_ttl_atomic", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015062099999996192, "outcome": "passed"}, "call": {"duration": 0.00022327799999999343, "outcome": "passed"}, "teardown": {"duration": 0.00013986199999971305, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_datetime", "lineno": 190, "outcome": "passed", "keywords": ["test_ttl_datetime", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.0001486029999999694, "outcome": "passed"}, "call": {"duration": 0.00023606199999992583, "outcome": "passed"}, "teardown": {"duration": 0.00013006300000029114, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_expire", "lineno": 114, "outcome": "passed", "keywords": ["test_ttl_expire", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00015506300000023288, "outcome": "passed"}, "call": {"duration": 0.00024348999999990184, "outcome": "passed"}, "teardown": {"duration": 0.00013106999999967783, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_lru", "lineno": 86, "outcome": "passed", "keywords": ["test_ttl_lru", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00016178000000000026, "outcome": "passed"}, "call": {"duration": 0.00021852599999983013, "outcome": "passed"}, "teardown": {"duration": 0.00012817499999995263, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_ttl_tuple_key", "lineno": 179, "outcome": "passed", "keywords": ["test_ttl_tuple_key", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.00014724899999984942, "outcome": "passed"}, "call": {"duration": 0.00020472499999968363, "outcome": "passed"}, "teardown": {"duration": 0.00012987499999983498, "outcome": "passed"}}, {"nodeid": "tests/test_ttl.py::TTLCacheTest::test_update", "lineno": 34, "outcome": "passed", "keywords": ["test_update", "TTLCacheTest", "test_ttl.py", "tests", "testbed", ""], "setup": {"duration": 0.0001464229999998956, "outcome": "passed"}, "call": {"duration": 0.0002170999999999701, "outcome": "passed"}, "teardown": {"duration": 0.0001835949999997588, "outcome": "passed"}}], "warnings": [{"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 8}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 54}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 257}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 264}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 18}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 126}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 188}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 269}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 297}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 297}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 297}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 78}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 98}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 114}, {"message": "MRUCache is deprecated", "category": "DeprecationWarning", "when": "runtest", "filename": "/testbed/tests/__init__.py", "lineno": 36}]}